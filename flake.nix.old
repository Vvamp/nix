{
  description = "Vvamp's NixOS + Home Manager (Flake)";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
    flake-utils.url = "github:numtide/flake-utils";
    home-manager = {
      url = "github:nix-community/home-manager/release-25.05";
      inputs.nixpkgs.follows = "nixpkgs";
    };
  };

  outputs = { self, nixpkgs, flake-utils, home-manager }:
    flake-utils.lib.eachDefaultSystem (system:
      let
        pkgs = nixpkgs.legacyPackages.${system};
        cfg  = nixpkgs.lib.nixosSystem {
          inherit system;
          modules = [

            # 1) Unfree configuration
            ( { lib, ... }: {
              nixpkgs.config = {
                allowUnfree = true;
                allowUnfreePredicate = pkg:
                  builtins.elem (lib.getName pkg) [ "masterpdfeditor" ];
              };
            } )

            # 2) Main system configuration
            ./hosts/default/configuration.nix

            # 3) Home Manager integration
            home-manager.nixosModules.home-manager
            {
              home-manager.useGlobalPkgs = true;
              home-manager.useUserPackages = true;
              home-manager.users.vvamp = import ./home/vvamp.nix;
            }
          ];
          specialArgs = { inherit home-manager; };
        };
      in {
        # For `nix flake show`
        nixosConfigurations.${system} = cfg;

        # Make `nixos-rebuild --flake .#nixos` work:
        packages.${system}.nixosConfigurations.nixos = cfg;
      }
    );
}
